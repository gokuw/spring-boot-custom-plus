package ${package.Controller};

import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import lombok.extern.slf4j.Slf4j;
#if(${cfg.generatorStrategy} != 'SIMPLE')
#if(${cfg.generatorPageParam})
import ${cfg.pageParamClass};
#end

#if(${cfg.generatorQueryVo})
import ${cfg.queryVoClass};
#end

#if(${cfg.operationLog})
import com.zz.common.aop.annotation.Log;
#end
#if(${cfg.paramValidation})
import ${cfg.validatorAddPackage};
import ${cfg.validatorUpdatePackage};
#end
#if(${cfg.requiresPermissions})
#end
#end
#if(${swagger2})
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
#end
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.*;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.zz.common.model.PageRequest;

/**
 * $!{table.comment} 控制器
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("/${cfg.entityObjectName}")
#if(${cfg.swaggerTags})
@Api(value = "$!{table.comment}API", tags = {"$!{table.comment}"})
#else
@Api("$!{table.comment}API")
#end
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end
#else
public class ${table.controllerName} {


    @Autowired
    private ${table.serviceName} ${cfg.serviceObjectName};

#if(${cfg.generatorStrategy} != 'SIMPLE')
    /**
     * 添加$!{table.comment}
     */
    @PostMapping("/add")
#if(${cfg.requiresPermissions})
    @RequiresPermissions("$!{cfg.colonTableName}:add")
#end
#if(${cfg.operationLog})
    @Log(modelName = "$!{table.comment}", action = Log.ADD,description="添加$!{table.comment}")
#end
    @ApiOperation(value = "添加$!{table.comment}")
    public Boolean add${entity}(${entity} ${cfg.entityObjectName})   {
        return  ${cfg.serviceObjectName}.saveOrUpdate(${cfg.entityObjectName});
    }

    /**
     * 修改$!{table.comment}
     */
    @PostMapping("/update")
#if(${cfg.requiresPermissions})
    @RequiresPermissions("$!{cfg.colonTableName}:update")
#end
#if(${cfg.operationLog})
   @Log(modelName = "修改$!{table.comment}", action = Log.UPDATE,description="修改$!{table.comment}")
#end
    @ApiOperation(value = "修改$!{table.comment}")
    public Boolean update${entity}(#if(${cfg.paramValidation})@Validated(Update.class) #end ${entity} ${cfg.entityObjectName})   {
        return ${cfg.serviceObjectName}.update${entity}(${cfg.entityObjectName});
    }

    /**
     * 删除$!{table.comment}
     */
    @PostMapping("delete")
#if(${cfg.requiresPermissions})
    @RequiresPermissions("$!{cfg.colonTableName}:delete")
#end
#if(${cfg.operationLog})
   @Log(modelName = "删除$!{table.comment}", action =Log.DELETE,description="删除$!{table.comment}")
#end
    @ApiOperation(value = "删除$!{table.comment}")
    public boolean  delete${entity}(String  sid) {
        return ${cfg.serviceObjectName}.delete${entity}(sid);
    }


    /**
     * 批量删除$!{table.comment}
     */
    @PostMapping("delBatch")
    #if(${cfg.operationLog})
    @Log(modelName = "批量删除$!{table.comment}", action =Log.DELETE,description="批量删除$!{table.comment}")
    #end
    @ApiOperation(value = "批量删除$!{table.comment}")
     public Boolean delBatch${entity}(@RequestParam(value="sids") List<String> sids ){

        return  ${cfg.serviceObjectName}.delBatch${entity}(sids);
     }


    /**
     * 根据id 获取$!{table.comment}详情
     */
    @PostMapping("getById")
#if(${cfg.operationLog})
   @Log(modelName = "$!{table.comment}详情", action = Log.SELECT,description="根据id查询$!{table.comment}")
#end
    @ApiOperation(value = "$!{table.comment}详情", response = ${entity}.class)
    public ${entity} getById${entity}( String id)   {
#if(${cfg.generatorStrategy} == 'SINGLE')
        return    ${cfg.serviceObjectName}.getById(id);
#else
        return      ${cfg.serviceObjectName}.get${entity}ById(id);
#end
    }

    /**
     * $!{table.comment}分页列表
     */
    @PostMapping("/getPageList")
#if(${cfg.requiresPermissions})
    @RequiresPermissions("$!{cfg.colonTableName}:page")
#end
#if(${cfg.operationLog})
       @Log(modelName = "$!{table.comment}分页列表", action = Log.SELECT,description="分页查询$!{table.comment}")
#end
    @ApiOperation(value = "$!{table.comment}分页列表", response = ${entity}.class)
    public Paging<${entity}> get${entity}PageList( ${entity}${cfg.pageParam} ${cfg.entityObjectName}${cfg.pageParam})   {
        return ${cfg.entityObjectName}Service.get${entity}PageList(${cfg.entityObjectName}${cfg.pageParam});
    }
#end

}

#end
